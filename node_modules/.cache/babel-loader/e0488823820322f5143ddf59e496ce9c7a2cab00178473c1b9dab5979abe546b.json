{"ast":null,"code":"var _jsxFileName = \"/Users/bagtaegeun/projects/todo-list/src/components/AddForm.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddForm = () => {\n  _s();\n  // 새로운 title과 desc를 받아 새로운 객체를 만들기 위해 state hook을 선언해줌\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n\n  // 추가하기를 클랙했을때 실행할 event handler\n  const onSubmitList = () => {\n    // title 과 desc가 아무것도 입력되지 않으면 실행되지 않도록 if 함수를 사용함.\n    if (title !== \"\" && desc !== \"\") {\n      // 새로운 객체를 생성해줌. isDone의 기본값은 false이다.\n      const newTodoLists = {\n        id: Date.now(),\n        title: title,\n        desc: desc,\n        isDone: false\n      };\n      // todoLists 배열을 복사해주고 newTodoLists를 추가해줌\n      setTodoLists([...todoLists, newTodoLists]);\n    } else {\n      return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-style\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"\\uC81C\\uBAA9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"add-input\"\n        // 입력되는 값을 title로 넘겨줌\n        ,\n        value: title\n        // state함수를 이용하여 입력되는 값을 배열로 넘겨줌\n        ,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"\\uB0B4\\uC6A9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"add-input\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-button\",\n      onClick: onSubmitList,\n      children: \"\\uCD94\\uAC00\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(AddForm, \"cMWzA7RToOkwO5n6VR2icO/rwsU=\");\n_c = AddForm;\nexport default AddForm;\nvar _c;\n$RefreshReg$(_c, \"AddForm\");","map":{"version":3,"names":["AddForm","title","setTitle","useState","desc","setDesc","onSubmitList","newTodoLists","id","Date","now","isDone","setTodoLists","todoLists","e","target","value"],"sources":["/Users/bagtaegeun/projects/todo-list/src/components/AddForm.js"],"sourcesContent":["const AddForm = () => {\n  // 새로운 title과 desc를 받아 새로운 객체를 만들기 위해 state hook을 선언해줌\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n\n  // 추가하기를 클랙했을때 실행할 event handler\n  const onSubmitList = () => {\n    // title 과 desc가 아무것도 입력되지 않으면 실행되지 않도록 if 함수를 사용함.\n    if (title !== \"\" && desc !== \"\") {\n      // 새로운 객체를 생성해줌. isDone의 기본값은 false이다.\n      const newTodoLists = {\n        id: Date.now(),\n        title: title,\n        desc: desc,\n        isDone: false,\n      };\n      // todoLists 배열을 복사해주고 newTodoLists를 추가해줌\n      setTodoLists([...todoLists, newTodoLists]);\n    } else {\n      return null;\n    }\n  };\n\n  return (\n    <div className=\"add-form\">\n      <div className=\"input-style\">\n        <label className=\"form-label\">제목</label>\n        <input\n          className=\"add-input\"\n          // 입력되는 값을 title로 넘겨줌\n          value={title}\n          // state함수를 이용하여 입력되는 값을 배열로 넘겨줌\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <label className=\"form-label\">내용</label>\n        <input\n          className=\"add-input\"\n          value={desc}\n          onChange={(e) => setDesc(e.target.value)}\n        />\n      </div>\n      <button className=\"add-button\" onClick={onSubmitList}>\n        추가하기\n      </button>\n    </div>\n  );\n};\n\nexport default AddForm;\n"],"mappings":";;;AAAA,MAAMA,OAAO,GAAG,MAAM;EAAA;EACpB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAMG,YAAY,GAAG,MAAM;IACzB;IACA,IAAIL,KAAK,KAAK,EAAE,IAAIG,IAAI,KAAK,EAAE,EAAE;MAC/B;MACA,MAAMG,YAAY,GAAG;QACnBC,EAAE,EAAEC,IAAI,CAACC,GAAG,EAAE;QACdT,KAAK,EAAEA,KAAK;QACZG,IAAI,EAAEA,IAAI;QACVO,MAAM,EAAE;MACV,CAAC;MACD;MACAC,YAAY,CAAC,CAAC,GAAGC,SAAS,EAAEN,YAAY,CAAC,CAAC;IAC5C,CAAC,MAAM;MACL,OAAO,IAAI;IACb;EACF,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,UAAU;IAAA,wBACvB;MAAK,SAAS,EAAC,aAAa;MAAA,wBAC1B;QAAO,SAAS,EAAC,YAAY;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAW,eACxC;QACE,SAAS,EAAC;QACV;QAAA;QACA,KAAK,EAAEN;QACP;QAAA;QACA,QAAQ,EAAGa,CAAC,IAAKZ,QAAQ,CAACY,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC1C,eACF;QAAO,SAAS,EAAC,YAAY;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAW,eACxC;QACE,SAAS,EAAC,WAAW;QACrB,KAAK,EAAEZ,IAAK;QACZ,QAAQ,EAAGU,CAAC,IAAKT,OAAO,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QACzC;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eACN;MAAQ,SAAS,EAAC,YAAY;MAAC,OAAO,EAAEV,YAAa;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAE5C;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAC,GA9CIN,OAAO;AAAA,KAAPA,OAAO;AAgDb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}