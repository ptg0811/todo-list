{"ast":null,"code":"var _jsxFileName = \"/Users/bagtaegeun/projects/todo-list/src/components/Lists.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// child component인 List를 설정\nfunction List(props) {\n  return (\n    /*#__PURE__*/\n    // 컴포넌트로 이러한 사각형 형태의 카드를 만들어준다.\n    _jsxDEV(\"div\", {\n      className: \"square-style\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.todoList.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: props.todoList.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-set\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"todo-delete-button button\"\n          // props로 handleDelete값을 받아오면서 id를 함수로 넘겨준다.\n          ,\n          onClick: () => {\n            props.handleDelete(props.todoList.id);\n          },\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"todo-complete-button button\",\n          onClick: () => {\n            props.handleDone(props.todoList.id);\n          }\n          // isDone 값에 따라 버튼의 글자가 바뀌도록 삼항연산자를 설정하고 렌더링해준다.\n          // {조건문 ? true인 경우 : false인 경우}\n          ,\n          children: props.todoList.isDone === true ? \"취소\" : \"완료\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c = List;\nexport default Lists;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["List","props","todoList","title","desc","handleDelete","id","handleDone","isDone","Lists"],"sources":["/Users/bagtaegeun/projects/todo-list/src/components/Lists.js"],"sourcesContent":["// child component인 List를 설정\nfunction List(props) {\n  return (\n    // 컴포넌트로 이러한 사각형 형태의 카드를 만들어준다.\n    <div className=\"square-style\">\n      <h2 // props를 이용해 부모 conponent에서 title을 받아와서 이부분에 렌더링한다.\n      >\n        {props.todoList.title}\n      </h2>\n      <div>{props.todoList.desc}</div>\n      <div className=\"button-set\">\n        <button\n          className=\"todo-delete-button button\"\n          // props로 handleDelete값을 받아오면서 id를 함수로 넘겨준다.\n          onClick={() => {\n            props.handleDelete(props.todoList.id);\n          }}\n        >\n          삭제\n        </button>\n        <button\n          className=\"todo-complete-button button\"\n          onClick={() => {\n            props.handleDone(props.todoList.id);\n          }}\n          // isDone 값에 따라 버튼의 글자가 바뀌도록 삼항연산자를 설정하고 렌더링해준다.\n          // {조건문 ? true인 경우 : false인 경우}\n        >\n          {props.todoList.isDone === true ? \"취소\" : \"완료\"}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Lists;\n"],"mappings":";;AAAA;AACA,SAASA,IAAI,CAACC,KAAK,EAAE;EACnB;IAAA;IACE;IACA;MAAK,SAAS,EAAC,cAAc;MAAA,wBAC3B;QAAA,UAEGA,KAAK,CAACC,QAAQ,CAACC;MAAK;QAAA;QAAA;QAAA;MAAA,QAClB,eACL;QAAA,UAAMF,KAAK,CAACC,QAAQ,CAACE;MAAI;QAAA;QAAA;QAAA;MAAA,QAAO,eAChC;QAAK,SAAS,EAAC,YAAY;QAAA,wBACzB;UACE,SAAS,EAAC;UACV;UAAA;UACA,OAAO,EAAE,MAAM;YACbH,KAAK,CAACI,YAAY,CAACJ,KAAK,CAACC,QAAQ,CAACI,EAAE,CAAC;UACvC,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAGK,eACT;UACE,SAAS,EAAC,6BAA6B;UACvC,OAAO,EAAE,MAAM;YACbL,KAAK,CAACM,UAAU,CAACN,KAAK,CAACC,QAAQ,CAACI,EAAE,CAAC;UACrC;UACA;UACA;UAAA;UAAA,UAECL,KAAK,CAACC,QAAQ,CAACM,MAAM,KAAK,IAAI,GAAG,IAAI,GAAG;QAAI;UAAA;UAAA;UAAA;QAAA,QACtC;MAAA;QAAA;QAAA;QAAA;MAAA,QACL;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;AAEV;AAAC,KAhCQR,IAAI;AAkCb,eAAeS,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}