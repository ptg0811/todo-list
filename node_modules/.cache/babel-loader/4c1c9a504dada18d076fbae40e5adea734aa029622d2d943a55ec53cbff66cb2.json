{"ast":null,"code":"var _jsxFileName = \"/Users/bagtaegeun/projects/todo-list/src/components/todo/Todo.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { changeDone, deleteList } from \"/Users/bagtaegeun/projects/todo-list/src/redux/modules/todos\";\nimport \"./style.css\";\n\n// child component인 List를 설정\n// 함수 setTodoLists, 배열 todoLists, map으로 생성된 인자 todoList 를 props 로 받아옴\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = _ref => {\n  _s();\n  let {\n    list\n  } = _ref;\n  // List\n\n  const dispatch = useDispatch();\n  const deleteListItem = id => {\n    dispatch(deleteList(id));\n  };\n  const onChangeDone = id => {\n    dispatch(changeDone(id));\n  };\n\n  // End of List\n\n  return (\n    /*#__PURE__*/\n    // 컴포넌트로 이러한 사각형 형태의 카드를 만들어준다.\n    _jsxDEV(\"div\", {\n      className: \"square-style\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: list.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: list.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-set\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"todo-delete-button button\",\n          onClick: () => {\n            deleteListItem(list.id);\n          },\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"todo-complete-button button\",\n          onClick: () => {\n            onChangeDone(list.id);\n          }\n          // isDone 값에 따라 버튼의 글자가 바뀌도록 삼항연산자를 설정하고 렌더링해준다.\n          // {조건문 ? true인 경우 : false인 경우}\n          ,\n          children: list.isDone === true ? \"취소\" : \"완료\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(Todo, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useDispatch","changeDone","deleteList","Todo","list","dispatch","deleteListItem","id","onChangeDone","title","desc","isDone"],"sources":["/Users/bagtaegeun/projects/todo-list/src/components/todo/Todo.jsx"],"sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  changeDone,\n  deleteList,\n} from \"/Users/bagtaegeun/projects/todo-list/src/redux/modules/todos\";\nimport \"./style.css\";\n\n// child component인 List를 설정\n// 함수 setTodoLists, 배열 todoLists, map으로 생성된 인자 todoList 를 props 로 받아옴\nconst Todo = ({ list }) => {\n  // List\n\n  const dispatch = useDispatch();\n\n  const deleteListItem = (id) => {\n    dispatch(deleteList(id));\n  };\n\n  const onChangeDone = (id) => {\n    dispatch(changeDone(id));\n  };\n\n  // End of List\n\n  return (\n    // 컴포넌트로 이러한 사각형 형태의 카드를 만들어준다.\n    <div className=\"square-style\">\n      <h2 // props를 이용해 부모 conponent에서 title을 받아와서 이부분에 렌더링한다.\n      >\n        {list.title}\n      </h2>\n      <div>{list.desc}</div>\n      <div className=\"button-set\">\n        <button\n          className=\"todo-delete-button button\"\n          onClick={() => {\n            deleteListItem(list.id);\n          }}\n        >\n          삭제\n        </button>\n        <button\n          className=\"todo-complete-button button\"\n          onClick={() => {\n            onChangeDone(list.id);\n          }}\n          // isDone 값에 따라 버튼의 글자가 바뀌도록 삼항연산자를 설정하고 렌더링해준다.\n          // {조건문 ? true인 경우 : false인 경우}\n        >\n          {list.isDone === true ? \"취소\" : \"완료\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Todo;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SACEC,UAAU,EACVC,UAAU,QACL,8DAA8D;AACrE,OAAO,aAAa;;AAEpB;AACA;AAAA;AACA,MAAMC,IAAI,GAAG,QAAc;EAAA;EAAA,IAAb;IAAEC;EAAK,CAAC;EACpB;;EAEA,MAAMC,QAAQ,GAAGL,WAAW,EAAE;EAE9B,MAAMM,cAAc,GAAIC,EAAE,IAAK;IAC7BF,QAAQ,CAACH,UAAU,CAACK,EAAE,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMC,YAAY,GAAID,EAAE,IAAK;IAC3BF,QAAQ,CAACJ,UAAU,CAACM,EAAE,CAAC,CAAC;EAC1B,CAAC;;EAED;;EAEA;IAAA;IACE;IACA;MAAK,SAAS,EAAC,cAAc;MAAA,wBAC3B;QAAA,UAEGH,IAAI,CAACK;MAAK;QAAA;QAAA;QAAA;MAAA,QACR,eACL;QAAA,UAAML,IAAI,CAACM;MAAI;QAAA;QAAA;QAAA;MAAA,QAAO,eACtB;QAAK,SAAS,EAAC,YAAY;QAAA,wBACzB;UACE,SAAS,EAAC,2BAA2B;UACrC,OAAO,EAAE,MAAM;YACbJ,cAAc,CAACF,IAAI,CAACG,EAAE,CAAC;UACzB,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAGK,eACT;UACE,SAAS,EAAC,6BAA6B;UACvC,OAAO,EAAE,MAAM;YACbC,YAAY,CAACJ,IAAI,CAACG,EAAE,CAAC;UACvB;UACA;UACA;UAAA;UAAA,UAECH,IAAI,CAACO,MAAM,KAAK,IAAI,GAAG,IAAI,GAAG;QAAI;UAAA;UAAA;UAAA;QAAA,QAC5B;MAAA;QAAA;QAAA;QAAA;MAAA,QACL;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;AAEV,CAAC;AAAC,GA7CIR,IAAI;EAAA,QAGSH,WAAW;AAAA;AAAA,KAHxBG,IAAI;AA+CV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}