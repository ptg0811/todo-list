{"ast":null,"code":"var _jsxFileName = \"/Users/bagtaegeun/projects/todo-list/src/App.jsx\",\n  _s = $RefreshSig$();\n// React를 사용한다. state hook을 사용하기 위해 { useState } 를 불러옴\nimport React, { useState } from \"react\";\nimport \"./App.css\"; // 🔥 반드시 App.css 파일을 import 해줘야 합니다.\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { submit } from \"./redux/modules/addTodoList\";\nimport { changeDone } from \"./redux/modules/changeDone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Form\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const addTodoListStore = useSelector(state => state.addTodoList.lists);\n  const dispatch = useDispatch();\n  const onChangeTitle = event => {\n    const {\n      value\n    } = event.target;\n    setTitle(value);\n  };\n  const onChangeDesc = event => {\n    const {\n      value\n    } = event.target;\n    setDesc(value);\n  };\n  const onSubmitTodoItem = () => {\n    dispatch(submit(title, desc));\n  };\n  console.log(addTodoListStore);\n  // End of Form\n\n  // List\n  const changeDoneStatusStore = useSelector(state => state.addTodoList.lists);\n  const onChangeDone = () => {\n    dispatch(changeDone(isDone));\n  };\n  console.log(changeDoneStatusStore);\n  // End of List\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uC81C\\uBAA9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"title\",\n        onChange: onChangeTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uB0B4\\uC6A9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"desc\",\n        onChange: onChangeDesc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        onSubmitTodoItem();\n      },\n      children: \"\\uCD94\\uAC00\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: addTodoListStore.map(list => list.title + list.desc)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        onChangeDone();\n      },\n      children: \"\\uC644\\uB8CC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"PT6ilA1Eu7rhuOj+s+7aqICL8iE=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","submit","changeDone","App","title","setTitle","desc","setDesc","addTodoListStore","state","addTodoList","lists","dispatch","onChangeTitle","event","value","target","onChangeDesc","onSubmitTodoItem","console","log","changeDoneStatusStore","onChangeDone","isDone","map","list"],"sources":["/Users/bagtaegeun/projects/todo-list/src/App.jsx"],"sourcesContent":["// React를 사용한다. state hook을 사용하기 위해 { useState } 를 불러옴\nimport React, { useState } from \"react\";\nimport \"./App.css\"; // 🔥 반드시 App.css 파일을 import 해줘야 합니다.\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { submit } from \"./redux/modules/addTodoList\";\nimport { changeDone } from \"./redux/modules/changeDone\";\n\nconst App = () => {\n  // Form\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n\n  const addTodoListStore = useSelector((state) => state.addTodoList.lists);\n  const dispatch = useDispatch();\n\n  const onChangeTitle = (event) => {\n    const { value } = event.target;\n    setTitle(value);\n  };\n\n  const onChangeDesc = (event) => {\n    const { value } = event.target;\n    setDesc(value);\n  };\n\n  const onSubmitTodoItem = () => {\n    dispatch(submit(title, desc));\n  };\n\n  console.log(addTodoListStore);\n  // End of Form\n\n  // List\n  const changeDoneStatusStore = useSelector((state) => state.addTodoList.lists);\n\n  const onChangeDone = () => {\n    dispatch(changeDone(isDone));\n  };\n\n  console.log(changeDoneStatusStore);\n  // End of List\n\n  return (\n    <div>\n      <div>\n        <label>제목</label>\n        <input type=\"title\" onChange={onChangeTitle} />\n        <label>내용</label>\n        <input type=\"desc\" onChange={onChangeDesc} />\n      </div>\n      <button\n        onClick={() => {\n          onSubmitTodoItem();\n        }}\n      >\n        추가하기\n      </button>\n      <div>{addTodoListStore.map((list) => list.title + list.desc)}</div>\n      <button\n        onClick={() => {\n          onChangeDone();\n        }}\n      >\n        완료\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW,CAAC,CAAC;AACpB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,MAAM,QAAQ,6BAA6B;AACpD,SAASC,UAAU,QAAQ,4BAA4B;AAAC;AAExD,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMU,gBAAgB,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,WAAW,CAACC,KAAK,CAAC;EACxE,MAAMC,QAAQ,GAAGZ,WAAW,EAAE;EAE9B,MAAMa,aAAa,GAAIC,KAAK,IAAK;IAC/B,MAAM;MAAEC;IAAM,CAAC,GAAGD,KAAK,CAACE,MAAM;IAC9BX,QAAQ,CAACU,KAAK,CAAC;EACjB,CAAC;EAED,MAAME,YAAY,GAAIH,KAAK,IAAK;IAC9B,MAAM;MAAEC;IAAM,CAAC,GAAGD,KAAK,CAACE,MAAM;IAC9BT,OAAO,CAACQ,KAAK,CAAC;EAChB,CAAC;EAED,MAAMG,gBAAgB,GAAG,MAAM;IAC7BN,QAAQ,CAACX,MAAM,CAACG,KAAK,EAAEE,IAAI,CAAC,CAAC;EAC/B,CAAC;EAEDa,OAAO,CAACC,GAAG,CAACZ,gBAAgB,CAAC;EAC7B;;EAEA;EACA,MAAMa,qBAAqB,GAAGtB,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,WAAW,CAACC,KAAK,CAAC;EAE7E,MAAMW,YAAY,GAAG,MAAM;IACzBV,QAAQ,CAACV,UAAU,CAACqB,MAAM,CAAC,CAAC;EAC9B,CAAC;EAEDJ,OAAO,CAACC,GAAG,CAACC,qBAAqB,CAAC;EAClC;;EAEA,oBACE;IAAA,wBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB,eACjB;QAAO,IAAI,EAAC,OAAO;QAAC,QAAQ,EAAER;MAAc;QAAA;QAAA;QAAA;MAAA,QAAG,eAC/C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB,eACjB;QAAO,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAEI;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACzC,eACN;MACE,OAAO,EAAE,MAAM;QACbC,gBAAgB,EAAE;MACpB,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGK,eACT;MAAA,UAAMV,gBAAgB,CAACgB,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACrB,KAAK,GAAGqB,IAAI,CAACnB,IAAI;IAAC;MAAA;MAAA;MAAA;IAAA,QAAO,eACnE;MACE,OAAO,EAAE,MAAM;QACbgB,YAAY,EAAE;MAChB,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGK;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAC,GA5DInB,GAAG;EAAA,QAKkBJ,WAAW,EACnBC,WAAW,EAoBED,WAAW;AAAA;AAAA,KA1BrCI,GAAG;AA8DT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}