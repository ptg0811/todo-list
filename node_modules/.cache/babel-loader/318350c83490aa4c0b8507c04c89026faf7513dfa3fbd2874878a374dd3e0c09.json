{"ast":null,"code":"var _jsxFileName = \"/Users/bagtaegeun/projects/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\"; // 🔥 반드시 App.css 파일을 import 해줘야 합니다.\nimport CustomButton from \"./components/CustomButton\";\nimport List from \"./components/List\";\nimport DoneList from \"./components/DoneList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // 데이터의 배열을 만들어준다.\n  // state를 사용하기 위해 setUsers와 useState를 넣어준다.\n  const [lists, setLists] = useState([{\n    id: 1,\n    title: \"리액트 공부하기\",\n    desc: \"리액트 기초를 공부해봅시다\"\n  }]);\n  const [donelists, setDoneLists] = useState([{\n    id: 1,\n    title: \"리액트 공부하기\",\n    desc: \"리액트 기초를 공부해봅시다\"\n  }]);\n\n  // 이곳은 name과 age를 입력받았을때 state값을 받아올 함수\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n\n  // user를 추가해주었을때 값을 받아올 event handler 생성\n  const addListHandler = () => {\n    const newLists = {\n      // user의 길이에 1을 추가한다. 배열 내에 4개의 요소가 있는경우 5번째를 추가한다.\n      id: lists.length + 1,\n      title: title,\n      desc: desc\n    };\n    // 전개연산자에 newUser를 추가해준다.\n    setLists([...lists, newLists]);\n  };\n  const [donetitle, setDoneTitle] = useState();\n  const [donedesc, setDoneDesc] = useState();\n  const doneListHandler = id => {\n    const newTodoList = lists.filter(list => list.id !== id);\n    setLists(newTodoList);\n    const newdoneLists = {\n      // user의 길이에 1을 추가한다. 배열 내에 4개의 요소가 있는경우 5번째를 추가한다.\n      id: donelists.length + 1,\n      title: donetitle,\n      desc: donedesc\n    };\n    // 전개연산자에 newUser를 추가해준다.\n    setDoneLists([...donelists, newdoneLists]);\n  };\n  const deleteListHandler = id => {\n    const newTodoList = lists.filter(list => list.id !== id);\n    setLists(newTodoList);\n  };\n  const deleteDoneListHandler = id => {\n    const newList = donelists.filter(donelist => donelist.id !== id);\n    setDoneLists(newList);\n  };\n  return (\n    /*#__PURE__*/\n    // map함수를 통해 배열값을 불러온다.\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-style\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uC81C\\uBAA9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: title\n          // 인풋 이벤트로 들어온 입력 값을 name의 값으로 업데이트\n          ,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: desc\n          // 인풋 이벤트로 들어온 입력 값을 age의 값으로 업데이트\n          ,\n          onChange: e => setDesc(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          color: \"green\",\n          onClick: addListHandler,\n          children: \"\\uCD94\\uAC00\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Working..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-style\",\n        children: lists.map(list => {\n          return /*#__PURE__*/_jsxDEV(List, {\n            handleDelete: deleteListHandler,\n            handleDone: doneListHandler,\n            setDoneTitle: setDoneTitle,\n            setDoneDesc: setDoneDesc,\n            list: list\n          }, list.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Done..!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-style\",\n        children: donelists.map(donelist => {\n          return /*#__PURE__*/_jsxDEV(DoneList, {\n            handleDeleteDone: deleteDoneListHandler,\n            donelist: donelist\n          }, donelist.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(App, \"0Isg6sy9souqusvPfaomM8xSr58=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CustomButton","List","DoneList","App","lists","setLists","id","title","desc","donelists","setDoneLists","setTitle","setDesc","addListHandler","newLists","length","donetitle","setDoneTitle","donedesc","setDoneDesc","doneListHandler","newTodoList","filter","list","newdoneLists","deleteListHandler","deleteDoneListHandler","newList","donelist","e","target","value","map"],"sources":["/Users/bagtaegeun/projects/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\"; // 🔥 반드시 App.css 파일을 import 해줘야 합니다.\nimport CustomButton from \"./components/CustomButton\";\nimport List from \"./components/List\";\nimport DoneList from \"./components/DoneList\";\n\nconst App = () => {\n  // 데이터의 배열을 만들어준다.\n  // state를 사용하기 위해 setUsers와 useState를 넣어준다.\n  const [lists, setLists] = useState([\n    { id: 1, title: \"리액트 공부하기\", desc: \"리액트 기초를 공부해봅시다\" },\n  ]);\n\n  const [donelists, setDoneLists] = useState([\n    { id: 1, title: \"리액트 공부하기\", desc: \"리액트 기초를 공부해봅시다\" },\n  ]);\n\n  // 이곳은 name과 age를 입력받았을때 state값을 받아올 함수\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n\n  // user를 추가해주었을때 값을 받아올 event handler 생성\n  const addListHandler = () => {\n    const newLists = {\n      // user의 길이에 1을 추가한다. 배열 내에 4개의 요소가 있는경우 5번째를 추가한다.\n      id: lists.length + 1,\n      title: title,\n      desc: desc,\n    };\n    // 전개연산자에 newUser를 추가해준다.\n    setLists([...lists, newLists]);\n  };\n\n  const [donetitle, setDoneTitle] = useState();\n  const [donedesc, setDoneDesc] = useState();\n\n  const doneListHandler = (id) => {\n    const newTodoList = lists.filter((list) => list.id !== id);\n    setLists(newTodoList);\n\n    const newdoneLists = {\n      // user의 길이에 1을 추가한다. 배열 내에 4개의 요소가 있는경우 5번째를 추가한다.\n      id: donelists.length + 1,\n      title: donetitle,\n      desc: donedesc,\n    };\n    // 전개연산자에 newUser를 추가해준다.\n    setDoneLists([...donelists, newdoneLists]);\n  };\n\n  const deleteListHandler = (id) => {\n    const newTodoList = lists.filter((list) => list.id !== id);\n    setLists(newTodoList);\n  };\n\n  const deleteDoneListHandler = (id) => {\n    const newList = donelists.filter((donelist) => donelist.id !== id);\n    setDoneLists(newList);\n  };\n\n  return (\n    // map함수를 통해 배열값을 불러온다.\n    <div>\n      <div className=\"input-style\">\n        <label>제목</label>\n        <input\n          value={title}\n          // 인풋 이벤트로 들어온 입력 값을 name의 값으로 업데이트\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <input\n          value={desc}\n          // 인풋 이벤트로 들어온 입력 값을 age의 값으로 업데이트\n          onChange={(e) => setDesc(e.target.value)}\n        />\n        <CustomButton color=\"green\" onClick={addListHandler}>\n          추가하기\n        </CustomButton>\n      </div>\n      <div>Working..</div>\n      <div className=\"app-style\">\n        {lists.map((list) => {\n          return (\n            <List\n              handleDelete={deleteListHandler}\n              handleDone={doneListHandler}\n              setDoneTitle={setDoneTitle}\n              setDoneDesc={setDoneDesc}\n              list={list}\n              key={list.id}\n            ></List>\n          );\n        })}\n      </div>\n      <div>Done..!</div>\n      <div className=\"app-style\">\n        {donelists.map((donelist) => {\n          return (\n            <DoneList\n              handleDeleteDone={deleteDoneListHandler}\n              donelist={donelist}\n              key={donelist.id}\n            ></DoneList>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}