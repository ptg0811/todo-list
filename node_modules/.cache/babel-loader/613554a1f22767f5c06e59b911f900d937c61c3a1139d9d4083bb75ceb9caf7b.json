{"ast":null,"code":"var _jsxFileName = \"/Users/bagtaegeun/projects/todo-list/src/App.jsx\",\n  _s = $RefreshSig$();\n// React를 사용한다. state hook을 사용하기 위해 { useState } 를 불러옴\nimport React, { useState } from \"react\";\nimport \"./App.css\"; // 🔥 반드시 App.css 파일을 import 해줘야 합니다.\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { submit } from \"./redux/modules/addTodoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const addTodoListStore = useSelector(state => state.addTodoList.lists);\n  const dispatch = useDispatch();\n  const onChangeTitle = event => {\n    const {\n      value\n    } = event.target;\n    setTitle(value);\n  };\n  const onChangeDesc = event => {\n    const {\n      value\n    } = event.target;\n    setDesc(value);\n  };\n  const onSubmitTodoItem = () => {\n    dispatch(submit(title, desc));\n  };\n  console.log(addTodoListStore);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uC81C\\uBAA9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"title\",\n        onChange: onChangeTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uB0B4\\uC6A9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"desc\",\n        onChange: onChangeDesc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        onSubmitTodoItem();\n      },\n      children: \"\\uCD94\\uAC00\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n  // const [todoLists, setTodoLists] = useState([\n  //   // todoLists 객체로 state hook을 지정해주었음\n  //   {\n  //     // 초기 id값은 0과 1로 설정하였고, 새로 등록되는 요소는 Date.now()를 사용할 예정\n  //     id: 0,\n  //     title: \"리액트 공부하기\",\n  //     desc: \"리액트 기초를 공부해봅시다\",\n  //     // 진행중과 완료 상태를 표현하기 위해 isDone 값을 true, false로 지정하였음\n  //     isDone: false,\n  //   },\n  //   {\n  //     id: 1,\n  //     title: \"리액트 알아보기\",\n  //     desc: \"리액트 기초를 알아봅시다\",\n  //     isDone: true,\n  //   },\n  // ]);\n\n  // return (\n  //   <div className=\"layout\">\n  //     <div className=\"container\">\n  //       <div>My Todo List</div>\n  //       <div>React</div>\n  //     </div>\n  //     <AddForm\n  //       /*???? 여기에는 key값이 필요하지 않은걸까 ????*/ setTodoLists={\n  //         setTodoLists\n  //       }\n  //       todoLists={todoLists}\n  //     />\n  //     <div>\n  //       <ListContainer\n  //         /*???? 여기에는 key값이 필요하지 않은걸까 ????*/ setTodoLists={\n  //           setTodoLists\n  //         }\n  //         todoLists={todoLists}\n  //       />\n  //     </div>\n  //   </div>\n  // );\n};\n_s(App, \"LIvzCbg1sL42X7kbndo4JwVoP1c=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","submit","App","title","setTitle","desc","setDesc","addTodoListStore","state","addTodoList","lists","dispatch","onChangeTitle","event","value","target","onChangeDesc","onSubmitTodoItem","console","log"],"sources":["/Users/bagtaegeun/projects/todo-list/src/App.jsx"],"sourcesContent":["// React를 사용한다. state hook을 사용하기 위해 { useState } 를 불러옴\nimport React, { useState } from \"react\";\nimport \"./App.css\"; // 🔥 반드시 App.css 파일을 import 해줘야 합니다.\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { submit } from \"./redux/modules/addTodoList\";\n\nconst App = () => {\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n\n  const addTodoListStore = useSelector((state) => state.addTodoList.lists);\n  const dispatch = useDispatch();\n\n  const onChangeTitle = (event) => {\n    const { value } = event.target;\n    setTitle(value);\n  };\n\n  const onChangeDesc = (event) => {\n    const { value } = event.target;\n    setDesc(value);\n  };\n\n  const onSubmitTodoItem = () => {\n    dispatch(submit(title, desc));\n  };\n\n  console.log(addTodoListStore);\n\n  return (\n    <div>\n      <div>\n        <label>제목</label>\n        <input type=\"title\" onChange={onChangeTitle} />\n        <label>내용</label>\n        <input type=\"desc\" onChange={onChangeDesc} />\n      </div>\n      <button\n        onClick={() => {\n          onSubmitTodoItem();\n        }}\n      >\n        추가하기\n      </button>\n    </div>\n  );\n  // const [todoLists, setTodoLists] = useState([\n  //   // todoLists 객체로 state hook을 지정해주었음\n  //   {\n  //     // 초기 id값은 0과 1로 설정하였고, 새로 등록되는 요소는 Date.now()를 사용할 예정\n  //     id: 0,\n  //     title: \"리액트 공부하기\",\n  //     desc: \"리액트 기초를 공부해봅시다\",\n  //     // 진행중과 완료 상태를 표현하기 위해 isDone 값을 true, false로 지정하였음\n  //     isDone: false,\n  //   },\n  //   {\n  //     id: 1,\n  //     title: \"리액트 알아보기\",\n  //     desc: \"리액트 기초를 알아봅시다\",\n  //     isDone: true,\n  //   },\n  // ]);\n\n  // return (\n  //   <div className=\"layout\">\n  //     <div className=\"container\">\n  //       <div>My Todo List</div>\n  //       <div>React</div>\n  //     </div>\n  //     <AddForm\n  //       /*???? 여기에는 key값이 필요하지 않은걸까 ????*/ setTodoLists={\n  //         setTodoLists\n  //       }\n  //       todoLists={todoLists}\n  //     />\n  //     <div>\n  //       <ListContainer\n  //         /*???? 여기에는 key값이 필요하지 않은걸까 ????*/ setTodoLists={\n  //           setTodoLists\n  //         }\n  //         todoLists={todoLists}\n  //       />\n  //     </div>\n  //   </div>\n  // );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW,CAAC,CAAC;AACpB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,MAAM,QAAQ,6BAA6B;AAAC;AAErD,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,gBAAgB,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACC,WAAW,CAACC,KAAK,CAAC;EACxE,MAAMC,QAAQ,GAAGX,WAAW,EAAE;EAE9B,MAAMY,aAAa,GAAIC,KAAK,IAAK;IAC/B,MAAM;MAAEC;IAAM,CAAC,GAAGD,KAAK,CAACE,MAAM;IAC9BX,QAAQ,CAACU,KAAK,CAAC;EACjB,CAAC;EAED,MAAME,YAAY,GAAIH,KAAK,IAAK;IAC9B,MAAM;MAAEC;IAAM,CAAC,GAAGD,KAAK,CAACE,MAAM;IAC9BT,OAAO,CAACQ,KAAK,CAAC;EAChB,CAAC;EAED,MAAMG,gBAAgB,GAAG,MAAM;IAC7BN,QAAQ,CAACV,MAAM,CAACE,KAAK,EAAEE,IAAI,CAAC,CAAC;EAC/B,CAAC;EAEDa,OAAO,CAACC,GAAG,CAACZ,gBAAgB,CAAC;EAE7B,oBACE;IAAA,wBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB,eACjB;QAAO,IAAI,EAAC,OAAO;QAAC,QAAQ,EAAEK;MAAc;QAAA;QAAA;QAAA;MAAA,QAAG,eAC/C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB,eACjB;QAAO,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAEI;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACzC,eACN;MACE,OAAO,EAAE,MAAM;QACbC,gBAAgB,EAAE;MACpB,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGK;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;EAER;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;AAAC,GAhFIf,GAAG;EAAA,QAIkBH,WAAW,EACnBC,WAAW;AAAA;AAAA,KALxBE,GAAG;AAkFT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}