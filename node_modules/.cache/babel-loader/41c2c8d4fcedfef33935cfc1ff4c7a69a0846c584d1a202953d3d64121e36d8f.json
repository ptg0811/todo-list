{"ast":null,"code":"var _jsxFileName = \"/Users/bagtaegeun/projects/todo-list/src/App.jsx\",\n  _s = $RefreshSig$();\n// React를 사용한다. state hook을 사용하기 위해 { useState } 를 불러옴\nimport React, { useState } from \"react\";\nimport \"./App.css\"; // 🔥 반드시 App.css 파일을 import 해줘야 합니다.\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const dispatch = useDispatch();\n  const addTodoListStore = useSelector(state => state);\n  const title = useSelector(state => state.addTodoList.map(list => list.title));\n  console.log(addTodoListStore);\n  console.log(title);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch({\n          type: \"SUBMIT\"\n        });\n      },\n      children: \"\\uCD94\\uAC00\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n  // const [todoLists, setTodoLists] = useState([\n  //   // todoLists 객체로 state hook을 지정해주었음\n  //   {\n  //     // 초기 id값은 0과 1로 설정하였고, 새로 등록되는 요소는 Date.now()를 사용할 예정\n  //     id: 0,\n  //     title: \"리액트 공부하기\",\n  //     desc: \"리액트 기초를 공부해봅시다\",\n  //     // 진행중과 완료 상태를 표현하기 위해 isDone 값을 true, false로 지정하였음\n  //     isDone: false,\n  //   },\n  //   {\n  //     id: 1,\n  //     title: \"리액트 알아보기\",\n  //     desc: \"리액트 기초를 알아봅시다\",\n  //     isDone: true,\n  //   },\n  // ]);\n\n  // return (\n  //   <div className=\"layout\">\n  //     <div className=\"container\">\n  //       <div>My Todo List</div>\n  //       <div>React</div>\n  //     </div>\n  //     <AddForm\n  //       /*???? 여기에는 key값이 필요하지 않은걸까 ????*/ setTodoLists={\n  //         setTodoLists\n  //       }\n  //       todoLists={todoLists}\n  //     />\n  //     <div>\n  //       <ListContainer\n  //         /*???? 여기에는 key값이 필요하지 않은걸까 ????*/ setTodoLists={\n  //           setTodoLists\n  //         }\n  //         todoLists={todoLists}\n  //       />\n  //     </div>\n  //   </div>\n  // );\n};\n_s(App, \"e4DJ0QNEceHf8o0XMDhfAnXu2MQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","App","dispatch","addTodoListStore","state","title","addTodoList","map","list","console","log","type"],"sources":["/Users/bagtaegeun/projects/todo-list/src/App.jsx"],"sourcesContent":["// React를 사용한다. state hook을 사용하기 위해 { useState } 를 불러옴\nimport React, { useState } from \"react\";\nimport \"./App.css\"; // 🔥 반드시 App.css 파일을 import 해줘야 합니다.\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const addTodoListStore = useSelector((state) => state);\n  const title = useSelector((state) =>\n    state.addTodoList.map((list) => list.title)\n  );\n\n  console.log(addTodoListStore);\n  console.log(title);\n\n  return (\n    <div>\n      <button\n        onClick={() => {\n          dispatch({ type: \"SUBMIT\" });\n        }}\n      >\n        추가하기\n      </button>\n    </div>\n  );\n  // const [todoLists, setTodoLists] = useState([\n  //   // todoLists 객체로 state hook을 지정해주었음\n  //   {\n  //     // 초기 id값은 0과 1로 설정하였고, 새로 등록되는 요소는 Date.now()를 사용할 예정\n  //     id: 0,\n  //     title: \"리액트 공부하기\",\n  //     desc: \"리액트 기초를 공부해봅시다\",\n  //     // 진행중과 완료 상태를 표현하기 위해 isDone 값을 true, false로 지정하였음\n  //     isDone: false,\n  //   },\n  //   {\n  //     id: 1,\n  //     title: \"리액트 알아보기\",\n  //     desc: \"리액트 기초를 알아봅시다\",\n  //     isDone: true,\n  //   },\n  // ]);\n\n  // return (\n  //   <div className=\"layout\">\n  //     <div className=\"container\">\n  //       <div>My Todo List</div>\n  //       <div>React</div>\n  //     </div>\n  //     <AddForm\n  //       /*???? 여기에는 key값이 필요하지 않은걸까 ????*/ setTodoLists={\n  //         setTodoLists\n  //       }\n  //       todoLists={todoLists}\n  //     />\n  //     <div>\n  //       <ListContainer\n  //         /*???? 여기에는 key값이 필요하지 않은걸까 ????*/ setTodoLists={\n  //           setTodoLists\n  //         }\n  //         todoLists={todoLists}\n  //       />\n  //     </div>\n  //   </div>\n  // );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW,CAAC,CAAC;AACpB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAAC;AAEvD,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAMC,QAAQ,GAAGF,WAAW,EAAE;EAC9B,MAAMG,gBAAgB,GAAGJ,WAAW,CAAEK,KAAK,IAAKA,KAAK,CAAC;EACtD,MAAMC,KAAK,GAAGN,WAAW,CAAEK,KAAK,IAC9BA,KAAK,CAACE,WAAW,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACH,KAAK,CAAC,CAC5C;EAEDI,OAAO,CAACC,GAAG,CAACP,gBAAgB,CAAC;EAC7BM,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;EAElB,oBACE;IAAA,uBACE;MACE,OAAO,EAAE,MAAM;QACbH,QAAQ,CAAC;UAAES,IAAI,EAAE;QAAS,CAAC,CAAC;MAC9B,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAGK;IAAA;IAAA;IAAA;EAAA,QACL;EAER;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;AAAC,GA7DIV,GAAG;EAAA,QACUD,WAAW,EACHD,WAAW,EACtBA,WAAW;AAAA;AAAA,KAHrBE,GAAG;AA+DT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}