{"version":3,"sources":["redux/modules/todos.js","components/form/Form.jsx","components/todo/Todo.jsx","components/list/List.jsx","pages/TodoList.jsx","components/header/Header.jsx","components/layout/Layout.jsx","pages/Details.jsx","shared/Router.js","App.jsx","reportWebVitals.js","redux/config/configStore.js","index.js"],"names":["initialState","lists","todoLists","state","arguments","length","undefined","action","newTodoLists","id","Date","now","title","desc","isDone","type","concat","Object","toConsumableArray","map","list","objectSpread","filter","Form","_useState","useState","_useState2","slicedToArray","setTitle","_useState3","_useState4","setDesc","todosStore","useSelector","todos","dispatch","useDispatch","console","log","react_default","a","createElement","className","onChange","event","value","target","onClick","submit","Todo","_ref","key","dist","to","deleteList","changeDone","List","WorkingLists","todo_Todo","DoneLists","role","aria-labelledby","TodoList","form_Form","list_List","Header","layoutStyles","margin","maxWidth","minWidth","Layout","children","header_Header","style","Details","param","useParams","find","parseInt","Router","layout_Layout","react_router_dist","path","element","pages_TodoList","pages_Details","App","shared_Router","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","ReactDOM","createRoot","document","getElementById","render","es","src_App"],"mappings":"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","file":"static/js/main.af55e705.chunk.js","sourcesContent":["// Action value\nconst SUBMIT = \"SUBMIT\";\nconst CHANGE_DONE = \"CHANGE_DONE\";\nconst DELETE_LIST = \"DELETE_LIST\";\n\n// Action Creator\nexport const submit = (title, desc) => {\n  return {\n    type: SUBMIT,\n    title,\n    desc,\n  };\n};\n\nexport const changeDone = (id) => {\n  return {\n    type: CHANGE_DONE,\n    id,\n  };\n};\n\nexport const deleteList = (id) => {\n  return {\n    type: DELETE_LIST,\n    id,\n  };\n};\n\n// Initial state\nconst initialState = {\n  lists: [],\n};\n\n// Reducer\nconst todoLists = (state = initialState, action) => {\n  const newTodoLists = {\n    id: Date.now(),\n    title: action.title,\n    desc: action.desc,\n    isDone: false,\n  };\n\n  switch (action.type) {\n    case \"SUBMIT\":\n      return {\n        lists: [...state.lists, newTodoLists],\n      };\n    case \"CHANGE_DONE\":\n      return {\n        lists: state.lists.map((list) => ({\n          ...list,\n          isDone: list.id === action.id ? !list.isDone : list.isDone,\n        })),\n      };\n    case \"DELETE_LIST\":\n      return {\n        ...state,\n        lists: state.lists.filter((list) => list.id !== action.id),\n      };\n    default:\n      return state;\n  }\n};\n\n// 모듈파일에서는 리듀서를 export default 한다.\nexport default todoLists;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { submit } from \"/Users/bagtaegeun/projects/todo-list/src/redux/modules/todos\";\nimport \"./style.css\";\n\nconst Form = () => {\n  // Form\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n\n  const todosStore = useSelector((state) => state.todos.lists);\n  const dispatch = useDispatch();\n\n  const onChangeTitle = (event) => {\n    const { value } = event.target;\n    setTitle(value);\n  };\n\n  const onChangeDesc = (event) => {\n    const { value } = event.target;\n    setDesc(value);\n  };\n\n  const onSubmitTodoItem = () => {\n    dispatch(submit(title, desc));\n  };\n\n  console.log(todosStore);\n\n  // End of Form\n\n  return (\n    <div className=\"add-form\">\n      <div className=\"input-style\">\n        <label className=\"form-label\">제목</label>\n        <input className=\"add-input\" type=\"title\" onChange={onChangeTitle} />\n        <label className=\"form-label\">내용</label>\n        <input className=\"add-input\" type=\"desc\" onChange={onChangeDesc} />\n      </div>\n      <button className=\"add-button\" onClick={onSubmitTodoItem}>\n        추가하기\n      </button>\n    </div>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  changeDone,\n  deleteList,\n} from \"/Users/bagtaegeun/projects/todo-list/src/redux/modules/todos\";\nimport \"./style.css\";\n\n// child component인 List를 설정\n// 함수 setTodoLists, 배열 todoLists, map으로 생성된 인자 todoList 를 props 로 받아옴\nconst Todo = ({ list }) => {\n  // List\n\n  const dispatch = useDispatch();\n\n  const deleteListItem = (id) => {\n    dispatch(deleteList(id));\n  };\n\n  const onChangeDone = (id) => {\n    dispatch(changeDone(id));\n  };\n\n  // End of List\n\n  return (\n    // 컴포넌트로 이러한 사각형 형태의 카드를 만들어준다.\n    <div className=\"square-style\">\n      <div>\n        {\n          <div key={list.id}>\n            <Link to={`/${list.id}`}>\n              <span>상세보기</span>\n            </Link>\n          </div>\n        }\n      </div>\n      <h2 // props를 이용해 부모 conponent에서 title을 받아와서 이부분에 렌더링한다.\n      >\n        {list.title}\n      </h2>\n      <div>{list.desc}</div>\n      <div className=\"button-set\">\n        <button\n          className=\"todo-delete-button button\"\n          onClick={() => {\n            deleteListItem(list.id);\n          }}\n        >\n          삭제\n        </button>\n        <button\n          className=\"todo-complete-button button\"\n          onClick={() => {\n            onChangeDone(list.id);\n          }}\n          // isDone 값에 따라 버튼의 글자가 바뀌도록 삼항연산자를 설정하고 렌더링해준다.\n          // {조건문 ? true인 경우 : false인 경우}\n        >\n          {list.isDone === true ? \"취소\" : \"완료\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Todo;\n\n// // src/pages/Works.js\n\n// import React from 'react';\n// import { Link, useParams } from 'react-router-dom';\n\n// function Works() {\n//   return (\n//     <div>\n//       {data.map((work) => {\n//         return (\n//           <div key={work.id}>\n//             <div>할일: {work.id}</div>\n//             <Link to={`/works/${work.id}`}>\n//               <span style={{ cursor: 'pointer' }}>➡️ Go to: {work.todo}</span>\n//             </Link>\n//           </div>\n//         );\n//       })}\n//     </div>\n//   );\n// }\n\n// export default Works;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Todo from \"../todo/Todo\";\nimport \"./style.css\";\n\nconst List = () => {\n  const todosStore = useSelector((state) => state.todos.lists);\n\n  const WorkingLists = todosStore\n    .filter((list) => list.isDone === false)\n    .map((list) => {\n      return <Todo todosStore={todosStore} list={list} key={list.id} />;\n    });\n\n  const DoneLists = todosStore\n    .filter((list) => list.isDone === true)\n    .map((list) => {\n      return <Todo todosStore={todosStore} list={list} key={list.id} />;\n    });\n\n  return (\n    <div className=\"list-container\">\n      <div>\n        <h2 className=\"list-title\">\n          Working..{\" \"}\n          <span role=\"img\" aria-labelledby=\"flame\">\n            🔥\n          </span>\n        </h2>\n        <div\n          className=\"app-style\" // 렌더링되도록 {workingLists} 변수를 받아옴\n        >\n          {WorkingLists}\n        </div>\n      </div>\n      <div>\n        <h2 className=\"list-title\">\n          Done..!{\" \"}\n          <span role=\"img\" aria-labelledby=\"confeti\">\n            🎉\n          </span>\n        </h2>\n        <div\n          className=\"app-style\" // 렌더링되도록 {workingLists} 변수를 받아옴\n        >\n          {DoneLists}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","import React from \"react\";\nimport Form from \"../components/form/Form\";\nimport List from \"../components/list/List\";\n\nconst TodoList = () => {\n  return (\n    <div>\n      <Form />\n      <List />\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <span>My Todo List</span>\n      <span>React</span>\n    </div>\n  );\n}\n\nexport default Header;\n","// src/shared/Layout.js\n\nimport React from \"react\";\nimport Header from \"../header/Header\";\n\nconst layoutStyles = {\n  margin: \"0 auto\",\n  maxWidth: \"1200px\",\n  minWidth: \"800px\",\n};\n\nfunction Layout({ children }) {\n  return (\n    <div>\n      <Header />\n      <div style={{ ...layoutStyles }}>{children}</div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport \"./style.css\";\n\nfunction Details() {\n  const param = useParams();\n  const todosStore = useSelector((state) => state.todos.lists);\n\n  const list = todosStore.find((list) => list.id === parseInt(param.id));\n\n  return (\n    <div className=\"detailStyles\">\n      <div className=\"detailCard\">\n        <div>\n          <div className=\"cardHeader\">\n            <div>\n              <span>ID:{list.id}</span>\n            </div>\n            <div>\n              {\n                <div>\n                  <Link to={`/`}>\n                    <button className=\"prevButton\">이전으로</button>\n                  </Link>\n                </div>\n              }\n            </div>\n          </div>\n          <div className=\"cardTitle\">\n            <h1>{list.title}</h1>\n          </div>\n          <div className=\"cardDesc\">\n            <span>{list.desc}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Details;\n","import React from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport TodoList from \"../pages/TodoList\";\nimport Layout from \"../components/layout/Layout\";\nimport Details from \"../pages/Details\";\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n      <Layout>\n        <Routes>\n          <Route path=\"/\" element={<TodoList />} />\n          <Route path=\"/:id\" element={<Details />} />\n        </Routes>\n      </Layout>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import React from \"react\";\nimport Router from \"./shared/Router\";\n\nconst App = () => {\n  // 최상위 component이 App에서 Router연결\n  return <Router />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore } from \"redux\";\nimport { combineReducers } from \"redux\";\n\n// module을 불러오는 부분\nimport todos from \"../modules/todos\";\n\n/*\n1. createStore()\n리덕스의 가장 핵심이 되는 스토어를 만드는 메소드(함수) 입니다. \n리덕스는 단일 스토어로 모든 상태 트리를 관리한다고 설명해 드렸죠? \n리덕스를 사용할 시 creatorStore를 호출할 일은 한 번밖에 없을 거예요.\n*/\n\n/*\n2. combineReducers()\n리덕스는 action —> dispatch —> reducer 순으로 동작한다고 말씀드렸죠? \n이때 애플리케이션이 복잡해지게 되면 reducer 부분을 여러 개로 나눠야 하는 경우가 발생합니다. \ncombineReducers은 여러 개의 독립적인 reducer의 반환 값을 하나의 상태 객체로 만들어줍니다.\n*/\n\nconst rootReducer = combineReducers({\n  todos: todos,\n});\nconst store = createStore(rootReducer);\n\nexport default store;\n","// 원래부터 있던 코드\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// 우리가 추가할 코드\nimport store from \"./redux/config/configStore\";\nimport { Provider } from \"react-redux\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  //App을 Provider로 감싸주고, configStore에서 export default 한 store를 넣어줍니다.\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}